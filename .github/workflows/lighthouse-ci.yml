name: Lighthouse CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  lighthouse:
    name: Audit Lighthouse CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Run Lighthouse CI
        run: npx lhci autorun

      - name: Upload Lighthouse reports
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-report
          path: lhci-report/

      - name: Get Vercel preview URL
        id: vercel
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const vercelComment = comments.data.find(c =>
              c.user?.login === 'vercel[bot]' && c.body?.includes('Visit Preview')
            );

            if (vercelComment) {
              const match = vercelComment.body.match(/\[Visit Preview\]\((.*?)\)/);
              if (match) {
                core.setOutput('preview-url', match[1]);
              }
            }

      - name: Comment PR with Lighthouse summary
        if: github.event.pull_request
        uses: actions/github-script@v7
        env:
          PREVIEW_URL: ${{ steps.vercel.outputs.preview-url }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const { owner, repo } = context.repo;
            const runUrl = `https://github.com/${owner}/${repo}/actions/runs/${process.env.GITHUB_RUN_ID}`;
            const previewBase = process.env.PREVIEW_URL;

            const manifestPath = './lhci-report/manifest.json';
            const summary = JSON.parse(fs.readFileSync(manifestPath, 'utf8'));

            const toEmoji = (score) => {
              const percent = Math.round(score * 100);
              if (percent >= 90) return 'ðŸŸ¢';
              if (percent >= 50) return 'ðŸŸ ';
              return 'ðŸ”´';
            };

            const formatScore = (value) => Math.round(value * 100);

            const makeRow = (entry) => {
              const { url, summary: s, htmlPath } = entry;
              const pathname = new URL(url).pathname;
              const vercelUrl = previewBase ? `${previewBase}${pathname}` : url;

              return `| [\`${pathname}\`](${vercelUrl}) | ${toEmoji(s.performance)} ${formatScore(s.performance)} | ${toEmoji(s.accessibility)} ${formatScore(s.accessibility)} | ${toEmoji(s['best-practices'])} ${formatScore(s['best-practices'])} | ${toEmoji(s.seo)} ${formatScore(s.seo)} |`;
            };

            const rows = summary.map(makeRow).join('\n');

            const body = [
              '## ðŸ“Š Lighthouse report',
              '',
              '| Page | Performance | Accessibility | Best Practices | SEO |',
              '|------|-------------|----------------|----------------|-----|',
              rows
            ].join('\n');

            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: context.issue.number,
              body
            });
